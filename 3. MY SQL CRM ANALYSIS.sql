CREATE DATABASE CRM_ANALYSIS;

SHOW TABLES IN CRM_ANALYSIS;

####################################################

# DATASETS
SELECT * FROM ACCOUNT;
SELECT * FROM `LEAD`;
SELECT * FROM `OPPERTUNINTY TABLE`;
SELECT * FROM `OPPORTUNITY PRODUCT`;
SELECT * FROM `user table`;

###########################################################

CREATE TABLE ACCOUNTS LIKE ACCOUNT;
LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Account.csv'
INTO TABLE ACCOUNTS
FIELDS TERMINATED BY","
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 ROWS;
SELECT * FROM ACCOUNTS;
DROP TABLE ACCOUNT;

CREATE TABLE LEADS LIKE `LEAD`;
LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Lead.csv'
INTO TABLE LEADS
FIELDS TERMINATED BY","
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 ROWS;
SELECT * FROM LEADS;
DROP TABLE `LEAD`;

CREATE TABLE OPPURTUNITY LIKE `OPPERTUNINTY TABLE`;
LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Oppertuninty Table.csv'
INTO TABLE OPPURTUNITY
FIELDS TERMINATED BY","
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 ROWS;
SELECT * FROM OPPURTUNITY;

CREATE TABLE OPPURTUNITY_PRODUCT LIKE `OPPORTUNITY PRODUCT`;
LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Opportunity Product.csv'
INTO TABLE OPPURTUNITY_PRODUCT
FIELDS TERMINATED BY","
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 ROWS;
DROP TABLE `OPPORTUNITY PRODUCT`;

CREATE TABLE USERS LIKE `user table`;
LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/User Table.csv'
INTO TABLE USERS
FIELDS TERMINATED BY","
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 ROWS;
SELECT * FROM USERS;
DROP TABLE `user table`;

#######################################################
#######################################################

# OPPURTUNITY KEY PERFORMANCE INDICATORS

# EXPECTED AMOUNT

SELECT CONCAT('₹ ',
		ROUND(
			(SUM(CAST(
					REPLACE(
						REPLACE(`Expected Amount`,'$','')
                        ,',','')
					AS DECIMAL(20,2)
					)))
			/1000000,2)
		,' MN') AS EXPECTED_AMOUNT
 FROM OPPURTUNITY;

# ACTIVE OPPURTUNITY

SELECT COUNT(`Has Open Activity`) AS ACTIVE_OPPURTUNITY
FROM oppurtunity 
WHERE `Has Open Activity`='TRUE';

# CONVERSION RATE

SELECT CONCAT(
	ROUND(COUNT(WON)*100/
		(SELECT COUNT(*) 
		FROM oppurtunity),2),' %')
        AS CONVERSION_RATE 
FROM oppurtunity 
WHERE WON='TRUE';

# WIN RATE

WITH WINNING AS(
	SELECT 1 AS ID,
		COUNT(STAGE) AS WON 
	FROM oppurtunity 
    WHERE STAGE LIKE '%WON%'),
LOSING AS(
	SELECT 1 AS ID,
		COUNT(STAGE) AS LOST 
	FROM oppurtunity 
    WHERE STAGE LIKE '%LOST%')
SELECT CONCAT(
	ROUND(WON*100/(WON+LOST),2),' %') 
		AS WIN_RATE 
	FROM WINNING AS W 
    JOIN LOSING AS L 
		ON W.ID=L.ID;

# LOSE RATE

SELECT CONCAT(
	ROUND(COUNT(STAGE)*100/
		(SELECT COUNT(*) 
        FROM oppurtunity),2),' %') 
	AS LOSS_RATE
 FROM oppurtunity 
 WHERE STAGE LIKE '%LOST%';

# RUNNING TOTAL EXPECTED

UPDATE OPPURTUNITY 
SET `Created Date`=substring(
	`Created Date`,1,LOCATE(' ',`Created Date`,1));
UPDATE OPPURTUNITY 
SET `Created Date`=REPLACE(`Created Date`,'-','/');
UPDATE OPPURTUNITY 
SET `Created Date`=str_to_date(`Created Date`,'%m/%d/%Y');
ALTER TABLE OPPURTUNITY 
MODIFY COLUMN `Created Date` DATE;
SELECT `Created Date`,
	CAST(
		REPLACE(REPLACE(`Expected Amount`,'$',''),',','')
	AS DECIMAL(20,2)) AS EXPECTED_AMOUNT,
    SUM(CAST(
		REPLACE(REPLACE(`Expected Amount`,'$',''),',','')
	AS DECIMAL(20,2))) 
		OVER(ORDER BY `Created Date` ASC) AS RUNNING_EXPECTED 
FROM oppurtunity 
ORDER BY `Created Date`ASC,
	EXPECTED_AMOUNT DESC;

# RUNNING TOTAL FORCAST

SELECT `Created Date`,
	CAST(
		REPLACE(REPLACE(`Amount`,'$',''),',','')
	AS DECIMAL(20,2)) AS AMOUNT,
    SUM(CAST(
		REPLACE(REPLACE(`Amount`,'$',''),',','')
	AS DECIMAL(20,2))) 
		OVER(ORDER BY `Created Date` ASC) AS RUNNING_EXPECTED 
FROM oppurtunity 
ORDER BY `Created Date`ASC,
	AMOUNT DESC;

# CLOSED WON OF TOTAL

SELECT CONCAT(
	ROUND(COUNT(STAGE)*100/
		(SELECT COUNT(*) 
        FROM oppurtunity),2),' %') AS WON_RATE
 FROM oppurtunity 
 WHERE STAGE LIKE '%WON%';

# CLOSED WON OF TOTAL CLOSE

WITH WINNING AS(
	SELECT 1 AS ID,
		COUNT(STAGE) AS WON 
        FROM oppurtunity 
        WHERE STAGE LIKE '%WON%'),
LOSING AS(
	SELECT 1 AS ID,
    COUNT(STAGE) AS LOST 
    FROM oppurtunity 
    WHERE STAGE LIKE '%LOST%')
SELECT CONCAT(
	ROUND(LOST*100/(WON+LOST),2),' %') AS LOST_RATE 
FROM WINNING AS W 
JOIN LOSING AS L 
	ON W.ID=L.ID;

# EXPECTED AMOUNT BY OPPURTUNITY TYPE

WITH EXPECTED_AMOUNT AS(
	SELECT `Opportunity Type`,
    ROUND((SUM(CAST(
		REPLACE(REPLACE(`Expected Amount`,'$',''),',','')
	AS DECIMAL(20,2)))/1000000),2)AS EX_AMOUNT 
    FROM oppurtunity 
    GROUP BY `Opportunity Type`)
SELECT `Opportunity Type`,
	CONCAT('₹ ',EX_AMOUNT,' MN') AS EXPECTED_AMOUNT 
FROM EXPECTED_AMOUNT 
ORDER BY EX_AMOUNT DESC;

# EXPECTED AMOUNT BY INDUSTRY

WITH EXPECTED_AMOUNT AS(
	SELECT Industry,
    ROUND((SUM(CAST(
		REPLACE(REPLACE(`Expected Amount`,'$',''),',','')
	AS DECIMAL(20,2)))/1000000),2)AS EX_AMOUNT 
    FROM oppurtunity 
    GROUP BY Industry)
SELECT Industry,
	CONCAT('₹ ',EX_AMOUNT,' MN') AS EXPECTED_AMOUNT 
FROM EXPECTED_AMOUNT 
ORDER BY EX_AMOUNT DESC 
LIMIT 10;

##########################################################
##########################################################

# LEADS KEY PERFORMANCE INDICATORS

# TOTAL LEADS

SELECT FORMAT(COUNT(*),0) AS NUMBER_OF_LEADS 
FROM LEADS;

# EXPECTED AMOUNT OF CONVERTED LEADS

SELECT CONCAT(ROUND((SUM(CAST(
		REPLACE(REPLACE(`Expected Amount`,'$',''),',','')
	AS DECIMAL(20,2)))/1000000),2),' MN') AS EX_AMOUNT 
FROM oppurtunity
WHERE `Created by Lead Conversion`='TRUE';

# CONVERSION RATE

SELECT CONCAT(
	ROUND(COUNT(*)*100/	
		(SELECT COUNT(*) 
        FROM leads),2),' %')
	AS CONVERSION_PERCENT
FROM leads
WHERE Converted='TRUE';

# CONVERTED ACCOUNT

SELECT FORMAT(COUNT(`Converted Account ID`),0)
	AS CONVERTED_ACCOUNT 
FROM leads
WHERE `Converted Account ID` IS NOT NULL
AND `Converted Account ID` <> '';

# CONVERTED OPPURTUNITY

SELECT FORMAT(COUNT(`Converted Opportunity ID`),0)
	AS CONVERTED_OPPURTUNITY
FROM leads
WHERE `Converted Opportunity ID` IS NOT NULL
AND `Converted Opportunity ID` <> '';

# LEADS BASED ON LEAD SOURCE

SELECT `Lead Source`,
	FORMAT(COUNT(*),0) AS NUMBER_OF_LEADS
FROM LEADS 
GROUP BY `Lead Source`
ORDER BY COUNT(*) DESC
LIMIT 10;

# LEADS BASED ON INDUSTRY

SELECT INDUSTRY,
	FORMAT(COUNT(*),0) AS NUMBER_OF_LEADS
FROM LEADS 
WHERE INDUSTRY IS NOT NULL 
	AND INDUSTRY <> ''
GROUP BY INDUSTRY
ORDER BY COUNT(*) DESC
LIMIT 10;

# LEADS BASED ON STAGE

SELECT STAGE,
	FORMAT(COUNT(`Created By ID`),0) AS NUMBER_OF_LEADS
FROM OPPURTUNITY 
GROUP BY STAGE
ORDER BY COUNT(`Created By ID`) DESC
LIMIT 10;

# LEADS BASED ON TIME

UPDATE LEADS 
SET `Created Date`=substring(
	`Created Date`,1,LOCATE(' ',`Created Date`,1));
UPDATE LEADS 
SET `Created Date`=REPLACE(`Created Date`,'-','/');
UPDATE LEADS 
SET `Created Date`=str_to_date(`Created Date`,'%m/%d/%Y');
ALTER TABLE LEADS 
MODIFY COLUMN `Created Date` DATE;

SELECT YEAR(`Created Date`) AS YEARS,
	FORMAT(COUNT(*),0) AS NUMBER_OF_LEADS
FROM LEADS 
GROUP BY YEARS
ORDER BY YEARS ASC;

SELECT QUARTER(`Created Date`) AS QUARTERS,
	FORMAT(COUNT(*),0) AS NUMBER_OF_LEADS
FROM LEADS 
GROUP BY QUARTERS
ORDER BY QUARTERS ASC;

SELECT MONTHNAME(`Created Date`) AS MONTHS,
	FORMAT(COUNT(*),0) AS NUMBER_OF_LEADS
FROM LEADS 
GROUP BY MONTHS,MONTH(`Created Date`)
ORDER BY MONTH(`Created Date`) ASC;